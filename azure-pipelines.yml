trigger:
  branches:
    include:
      - main

variables:
  # Nombres de las Web Apps en Azure
  qaFrontendAppName: 'blogapi-front-qa'
  qaBackendAppName: 'blogapi-back-qa'
  prodFrontendAppName: 'blogapi-front-prod'
  prodBackendAppName: 'blogapi-back-prod'

jobs:
  # Frontend Build y Deploy
  - job: FrontendBuildDeploy
    displayName: 'Frontend Build and Deploy'
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
      - task: NodeTool@0
        displayName: 'Use Node.js 18'
        inputs:
          versionSpec: '18.x'

      - script: |
          npm install
          npm run build --prod
        displayName: 'Install Dependencies and Build Frontend'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Frontend Artifacts'
        inputs:
          publishLocation: 'Container'
          artifactName: 'frontendBuild'
          
      # Deploy en QA
      - task: AzureWebApp@1
        displayName: 'Deploy Frontend to QA'
        inputs:
          azureSubscription: 'Azure for Students'
          appName: $(qaFrontendAppName)
          package: $(Build.ArtifactStagingDirectory)/frontendBuild

  # Backend Build y Deploy
  - job: BackendBuildDeploy
    displayName: 'Backend Build and Deploy'
    dependsOn: FrontendBuildDeploy
    pool:
      vmImage: 'windows-latest'

    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '8.0.x'
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - script: |
          dotnet build
          dotnet test
        displayName: 'Build and Test Backend'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Backend Artifacts'
        inputs:
          publishLocation: 'Container'
          artifactName: 'backendBuild'

      # Deploy en QA
      - task: AzureWebApp@1
        displayName: 'Deploy Backend to QA'
        inputs:
          azureSubscription: 'Azure for Students'
          appName: $(qaBackendAppName)
          package: $(Build.ArtifactStagingDirectory)/backendBuild

  # Aprobación Manual para Producción
  - job: ManualApproval
    displayName: 'Manual Approval for PROD Deployment'
    dependsOn: BackendBuildDeploy
    condition: succeeded()
    steps:
      - task: ManualValidation@0
        displayName: 'Approval for PROD'
        inputs:
          notifyUsers: 'user@example.com'

  # Deploy a Producción
  - job: DeployToProd
    displayName: 'Deploy to Production'
    dependsOn: ManualApproval
    condition: succeeded()
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      # Frontend Deploy en Producción
      - task: AzureWebApp@1
        displayName: 'Deploy Frontend to Production'
        inputs:
          azureSubscription: 'YourAzureSubscription'
          appName: $(prodFrontendAppName)
          package: $(Build.ArtifactStagingDirectory)/frontendBuild

      # Backend Deploy en Producción
      - task: AzureWebApp@1
        displayName: 'Deploy Backend to Production'
        inputs:
          azureSubscription: 'YourAzureSubscription'
          appName: $(prodBackendAppName)
          package: $(Build.ArtifactStagingDirectory)/backendBuild
